<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/stylesheets/Home.css" />
    <title>Modify Products</title>
  </head>
<body class="bg-zinc-700 text-black">
  <div class="p-4 min-h-screen flex flex-col items-center">
    <h1 class="text-4xl text-white mb-6">Modify Product</h1>
    <% if (find) { %>
      <form method="post" action="/modify/<%= find.id %>" enctype="multipart/form-data" class="w-full max-w-4xl bg-sky-600 p-6 rounded-lg shadow-lg">
        <div class="space-y-4">

          <div class="flex flex-col md:flex-row md:space-x-4">
            <select
              name="productType"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold w-full md:w-1/3"
            >
              <option value="phone" <%= find.productType === 'phone' ? 'selected' : '' %>>Phone</option>
              <option value="laptop" <%= find.productType === 'laptop' ? 'selected' : '' %>>Laptop</option>
              <option value="tablet" <%= find.productType === 'tablet' ? 'selected' : '' %>>Tablet</option>
            </select>

            <select
              name="popularity"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold w-full md:w-1/3"
            >
              <option value="popular" <%= find.popularity === 'popular' ? 'selected' : '' %>>Popular</option>
              <option value="average" <%= find.popularity === 'average' ? 'selected' : '' %>>Average</option>
              <option value="not popular" <%= find.popularity === 'not popular' ? 'selected' : '' %>>Not Popular</option>
            </select>
          </div>
          <!-- boolean -->
          <div class="flex flex-col md:flex-row md:space-x-4 bg-zinc-500 text-white px-3 py-2 rounded-lg">
            <div>Newly Launched:</div>
            <div class="flex items-center justify-center gap-4">
                <label>
                    <input type="radio" name="latest" value="true" <%= find.latest === 'true' ? 'checked' : '' %> >True
                </label>
                <label>
                    <input type="radio" name="latest" value="false" <%= find.latest === 'false' ? 'checked' : '' %> >False
                </label>
            </div>
        </div>

        <div class="flex flex-col md:flex-row md:space-x-4 bg-zinc-500 text-white px-3 py-2 rounded-lg">
            <div>Most Sold of 2024:</div>
            <div class="flex items-center justify-center gap-4">
                <label>
                    <input type="radio" name="mostsold" value="true" <%= find.mostsold === 'true' ? 'checked' : '' %> >True
                </label>
                <label>
                    <input type="radio" name="mostsold" value="false" <%= find.mostsold === 'false' ? 'checked' : '' %> >False
                </label>
            </div>
        </div>

        <div class="flex flex-col md:flex-row md:space-x-4 bg-zinc-500 text-white px-3 py-2 rounded-lg">
            <div>Most Popular:</div>
            <div class="flex items-center justify-center gap-4">
                <label>
                    <input type="radio" name="mostpopular" value="true" <%= find.mostpopular === 'true' ? 'checked' : '' %> >True
                </label>
                <label>
                    <input type="radio" name="mostpopular" value="false" <%= find.mostpopular === 'false' ? 'checked' : '' %> >False
                </label>
            </div>
        </div>

        <div class="flex flex-col md:flex-row md:space-x-4 bg-zinc-500 text-white px-3 py-2 rounded-lg">
            <div>Recommended for you:</div>
            <div class="flex items-center justify-center gap-4">
                <label>
                    <input type="radio" name="recommended" value="true" <%= find.recommended === 'true' ? 'checked' : '' %> >True
                </label>
                <label>
                    <input type="radio" name="recommended" value="false" <%= find.recommended === 'false' ? 'checked' : '' %> >False
                </label>
            </div>
        </div>

        <div class="flex flex-col md:flex-row md:space-x-4 bg-zinc-500 text-white px-3 py-2 rounded-lg">
            <!-- <div>Budget Devices:</div> -->
            <h1 class="whitespace-nowrap">Item catagorie:</h1>
            <div class="flex items-center justify-evenly w-full gap-4">
                <label>
                Budget:
                <input type="radio" name="item_categorie" value="budget" <%= find.item_categorie === 'budget' ? 'checked' : '' %> >
              </label>
                <label>
                Midrange:
                <input type="radio" name="item_categorie" value="midrange" <%= find.item_categorie === 'midrange' ? 'checked' : '' %> >
              </label>
                <label>
                Flagship:
                <input type="radio" name="item_categorie" value="flagship" <%= find.item_categorie === 'flagship' ? 'checked' : '' %> >
              </label>
            </div>
        </div>
       
        <div class="flex flex-col md:flex-row md:space-x-4 bg-zinc-500 text-white px-3 py-2 rounded-lg">
          <h1 class="whitespace-nowrap">Target Audience:</h1>
          <div class="flex items-center justify-evenly w-full gap-4">
            <label>
              Gamer:
              <input type="checkbox" name="targetaudience" value="gaming" <%= find.targetaudience.includes('gaming') ? 'checked' : '' %> >
            </label>
            <label>
              Professional:
              <input type="checkbox" name="targetaudience" value="professional" <%= find.targetaudience.includes('professional') ? 'checked' : '' %> >
            </label>
            <label>
              Students:
              <input type="checkbox" name="targetaudience" value="students" <%= find.targetaudience.includes('students') ? 'checked' : '' %> >
            </label>
            <label>
              Normal Usage:
              <input type="checkbox" name="targetaudience" value="normalusage" <%= find.targetaudience.includes('normalusage') ? 'checked' : '' %> >
            </label>
          </div>
        </div>
        

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <input
              type="text"
              name="name"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Product Name"
              value="<%= find.name %>"
            />
            <input
              type="text"
              name="dimension"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Dimension"
              value="<%= find.dimension %>"
            />
            <input
              type="text"
              name="build"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Build"
              value="<%= find.build %>"
            />
            <input
              type="text"
              name="weight"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Weight"
              value="<%= find.weight %>"
            />
            <input
              type="text"
              name="dtype"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Display Type"
              value="<%= find.dtype %>"
            />
            <input
              type="text"
              name="size"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Display Size"
              value="<%= find.size %>"
            />
            <input
              type="text"
              name="resolution"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Display Resolution"
              value="<%= find.resolution %>"
            />
            <input
              type="text"
              name="os"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Operation System"
              value="<%= find.os %>"
            />

      
  <div class="flex flex-col">

    <div id="processorlist">
      <div id="processorContainer" class="flex flex-col gap-4">
          <% if (find.processor && find.processor.length > 0) { %>
              <% find.processor.forEach((processorSet, index) => { %>
                  <div class="processor-group flex flex-col gap-4" data-index="<%= index %>">
                      <h3>Processor Options <%=index+1%>:</h3>
                      <div class="grid grid-cols-2 gap-2 mt-2">
                        
                          <% processorSet.forEach((processor) => { %>
                              <div class="flex items-center gap-2">
                                  <input
                                      type="text"
                                      name="processor[<%= index %>][]" 
                                      class="processor outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold processor-input"
                                      placeholder="Processor Option"
                                      value="<%= processor %>"
                                  />
                                  <button
                                      type="button"
                                      class="remove-processor-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                                      onclick="removeProcessorOption(this)">&times;</button>
                              </div>
                          <% }); %>
                      </div>
                      <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                          <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addProcessorOption(this)">
                              Add Processor Option
                          </div>
                          <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeProcessorContainer(this)">
                              Remove Processor Container
                          </div>
                      </div>
                  </div>
              <% }); %>
          <% } else { %>
              <div class="processor-group flex flex-col gap-4" data-index="0">
                  <h3>Processor Options 1:</h3>
                  <div class="flex items-center gap-2 mt-2">
                      <input
                          type="text"
                          name="processor[0][]"
                          class="processor outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold processor-input"
                          placeholder="Processor Option"
                          value=""
                      />
                      <button
                          type="button"
                          class="remove-processor-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                          onclick="removeProcessorOption(this)">&times;</button>
                  </div>
                  <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                      <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addProcessorOption(this)">
                          Add Processor Option
                      </div>
                      <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeProcessorContainer(this)">
                          Remove Processor Container
                      </div>
                  </div>
              </div>
          <% } %>
      </div>  
  
      <div class="mt-4 flex flex-col md:flex-row md:space-x-4 bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
          <div id="addProcessorField" class="cursor-pointer bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="createProcessorDiv('processorContainer')">
              Add Processor Container
          </div>
      </div>
    </div>
  
    <div id="graphicslist">
      <div id="graphicsContainer" class="flex flex-col gap-4">
          <% if (find.graphic && find.graphic.length > 0) { %>
              <% find.graphic.forEach((graphicsSet, index) => { %>
                  <div class="graphic-group flex flex-col gap-4" data-index="<%= index %>">
                      <h3>Graphic Options <%= index+1%>:</h3>
                      <div class="grid grid-cols-2 gap-2 mt-2">
                        <% if (Array.isArray(graphicsSet)) { %>
                            <% graphicsSet.forEach((graphics) => { %>
                                <div class="flex items-center gap-2">
                                    <input
                                        type="text"
                                        name="graphic[<%= index %>][]" 
                                        class="graphic outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold graphic-input"
                                        placeholder="Graphic Option"
                                        value="<%= graphics %>"
                                    />
                                    <button
                                        type="button"
                                        class="remove-graphic-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                                        onclick="removeGraphicOption(this)">&times;</button>
                                </div>
                            <% }); %>
                        <% } %>
                        
                      </div>
                      <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                          <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addGraphicOption(this)">
                              Add Graphic Option
                          </div>
                          <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeGraphicContainer(this)">
                              Remove Graphic Container
                          </div>
                      </div>
                  </div>
              <% }); %>
          <% } else { %>
              <div class="graphic-group flex flex-col gap-4" data-index="0">
                  <h3>Graphic Options 1:</h3>
                  <div class="flex items-center gap-2 mt-2">
                      <input
                          type="text"
                          name="graphic[0][]"
                          class="graphic outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold graphic-input"
                          placeholder="Graphic Option"
                          value=""
                      />
                      <button
                          type="button"
                          class="remove-graphic-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                          onclick="removeGraphicOption(this)">&times;</button>
                  </div>
                  <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                      <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addGraphicOption(this)">
                          Add Graphic Option
                      </div>
                      <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeGraphicContainer(this)">
                          Remove Graphic Container
                      </div>
                  </div>
              </div>
          <% } %>
      </div>
  
      <div class="mt-4 flex flex-col md:flex-row md:space-x-4 bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
          <div id="addGraphicsField" class="cursor-pointer bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="createGraphicsDiv('graphicsContainer')">
              Add Graphics Container
          </div>
      </div>
  </div>
  
    <div id="pricelist">
          <div id="priceContainer" class="flex flex-col gap-4">
              <% if (find.price && find.price.length > 0) { %>
                  <% find.price.forEach((priceSet, index) => { %>
                      <div class="price-group flex flex-col gap-4" data-index="<%= index %>">
                          <h3>Price Options:</h3>
                          <div class="grid grid-cols-2 gap-2 mt-2">
                              <% priceSet.forEach((price) => { %>
                                  <div class="flex items-center gap-2">
                                      <input
                                          type="text"
                                          name="price[<%= index %>][]" 
                                          class="price outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold price-input"
                                          placeholder="Price Option ($)"
                                          value="<%= price %>"
                                      />
                                      <button
                                          type="button"
                                          class="remove-price-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                                          onclick="removePriceOption(this)">&times;</button>
                                  </div>
                              <% }); %>
                          </div>
                          <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                              <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addPriceOption(this)">
                                  Add Price Option
                              </div>
                              <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removePriceContainer(this)">
                                  Remove Price Container
                              </div>
                          </div>
                      </div>
                  <% }); %>
              <% } else { %>
                  <div class="price-group flex flex-col gap-4" data-index="0">
                      <h3>Price Options:</h3>
                      <div class="flex items-center gap-2 mt-2">
                          <input
                              type="text"
                              name="price[0][]"
                              class="price outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold price-input"
                              placeholder="Price Option ($)"
                              value=""
                          />
                          <button
                              type="button"
                              class="remove-price-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                              onclick="removePriceOption(this)">&times;</button>
                      </div>
                      <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                          <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addPriceOption(this)">
                              Add Price Option
                          </div>
                          <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removePriceContainer(this)">
                              Remove Price Container
                          </div>
                      </div>
                  </div>
              <% } %>
          </div>  
      
          <div class="mt-4 flex flex-col md:flex-row md:space-x-4 bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
              <div id="addPriceField" class="cursor-pointer bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="createPriceDiv('priceContainer')">
                  Add Price Container
              </div>
          </div>
    </div>

    <div id="ramlist">
        <div id="ramContainer" class="flex flex-col gap-4">
            <% if (find.ram && find.ram.length > 0) { %>
                <% find.ram.forEach((ramSet, index) => { %>
                    <div class="ram-group flex flex-col gap-4" data-index="<%= index %>">
                        <h3>RAM Options:</h3>
                        <div class="grid grid-cols-2 gap-2 mt-2">
                            <% ramSet.forEach((ram) => { %>
                                <div class="flex items-center gap-2">
                                    <input
                                        type="text"
                                        name="ram[<%= index %>][]" 
                                        class="ram outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold ram-input"
                                        placeholder="RAM Option (GB)"
                                        value="<%= ram %>"
                                    />
                                    <button
                                        type="button"
                                        class="remove-ram-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                                        onclick="removeRamOption(this)">&times;</button>
                                </div>
                            <% }); %>
                        </div>
                        <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                            <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addRamOption(this)">
                                Add RAM Option
                            </div>
                            <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeRamContainer(this)">
                                Remove RAM Container
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="ram-group flex flex-col gap-4" data-index="0">
                    <h3>RAM Options:</h3>
                    <div class="flex items-center gap-2 mt-2">
                        <input
                            type="text"
                            name="ram[0][]"
                            class="ram outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold ram-input"
                            placeholder="RAM Option (GB)"
                            value=""
                        />
                        <button
                            type="button"
                            class="remove-ram-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                            onclick="removeRamOption(this)">&times;</button>
                    </div>
                    <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                        <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addRamOption(this)">
                            Add RAM Option
                        </div>
                        <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeRamContainer(this)">
                            Remove RAM Container
                        </div>
                    </div>
                </div>
            <% } %>
        </div>  
    
        <div class="mt-4 flex flex-col md:flex-row md:space-x-4 bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
            <div id="addRamField" class="cursor-pointer bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="createRamDiv('ramContainer')">
                Add RAM Container
            </div>
        </div>
    </div>

    <div id="storagelist">
      <div id="storageContainer" class="flex flex-col gap-4">
          <% if (find.storage && find.storage.length > 0) { %>
              <% find.storage.forEach((storageSet, index) => { %>
                  <div class="storage-group flex flex-col gap-4" data-index="<%= index %>">
                      <h3>Storage Options:</h3>
                      <div class="grid grid-cols-2 gap-2 mt-2">
                          <% storageSet.forEach((storage) => { %>
                              <div class="flex items-center gap-2">
                                  <input
                                      type="text"
                                      name="storage[<%= index %>][]" 
                                      class="storage outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold storage-input"
                                      placeholder="Storage Option (GB)"
                                      value="<%= storage %>"
                                  />
                                  <button
                                      type="button"
                                      class="remove-storage-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                                      onclick="removeStorageOption(this)">&times;</button>
                              </div>
                          <% }); %>
                      </div>
                      <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                          <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addStorageOption(this)">
                              Add Storage Option
                          </div>
                          <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeStorageContainer(this)">
                              Remove Storage Container
                          </div>
                      </div>
                  </div>
              <% }); %>
          <% } else { %>
              <div class="storage-group flex flex-col gap-4" data-index="0">
                  <h3>Storage Options:</h3>
                  <div class="flex items-center gap-2 mt-2">
                      <input
                          type="text"
                          name="storage[0][]"
                          class="storage outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold storage-input"
                          placeholder="Storage Option (GB)"
                          value=""
                      />
                      <button
                          type="button"
                          class="remove-storage-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                          onclick="removeStorageOption(this)">&times;</button>
                  </div>
                  <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                      <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addStorageOption(this)">
                          Add Storage Option
                      </div>
                      <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeStorageContainer(this)">
                          Remove Storage Container
                      </div>
                  </div>
              </div>
          <% } %>
      </div>  
  
      <div class="mt-4 flex flex-col md:flex-row md:space-x-4 bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
          <div id="addStorageField" class="cursor-pointer bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="createStorageDiv('storageContainer')">
              Add Storage Container
          </div>
      </div>
    </div>

  </div>          
   
      <script>
    function createProcessorDiv(containerId) {
        const mainContainer = document.getElementById(containerId);
        const newIndex = mainContainer.children.length;

        const newGroup = document.createElement('div');
        newGroup.className = 'processor-group flex flex-col gap-4';
        newGroup.setAttribute('data-index', newIndex);
        newGroup.innerHTML = `
            <h3>Processor Options:</h3>
            <div class="grid grid-cols-2 gap-2 mt-2">
                <div class="flex items-center gap-2">
                    <input
                        type="text"
                        name="processor[${newIndex}][]"
                        class="processor outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold processor-input"
                        placeholder="Processor Option"
                    />
                    <button
                        type="button"
                        class="remove-processor-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                        onclick="removeProcessorOption(this)">&times;</button>
                </div>
            </div>
            <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addProcessorOption(this)">
                    Add Processor Option
                </div>
                <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeProcessorContainer(this)">
                    Remove Processor Container
                </div>
            </div>
        `;

        mainContainer.appendChild(newGroup);
    }

    function addProcessorOption(button) {
        const group = button.closest('.processor-group');
        const newIndex = group.dataset.index;
        const newInput = document.createElement('div');
        newInput.className = 'flex items-center gap-2 mt-2';
        newInput.innerHTML = `
        <div class="flex gap-1 items-center justify-center w-full mb-2">
            <input
                type="text"
                name="processor[${newIndex}][]"
                class="processor outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold processor-input"
                placeholder="Processor Option"
            />
            <button
                type="button"
                class="remove-processor-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                onclick="removeProcessorOption(this)">&times;</button>
        </div>`;

        const buttonContainer = group.querySelector('.mt-4.flex');
        buttonContainer.insertBefore(newInput, buttonContainer.firstChild);
    }

    function removeProcessorOption(button) {
        const processorInputContainer = button.parentElement; 
        if (processorInputContainer.querySelector('input').value === "") {
            processorInputContainer.remove();
        }
    }

    function removeProcessorContainer(button) {
        const group = button.closest('.processor-group');
        const processorInputs = group.querySelectorAll('input[type="text"]');

        const allEmpty = Array.from(processorInputs).every(input => input.value.trim() === "");

        if (allEmpty) {
            group.remove();
        } else {
            alert("Cannot remove this processor group because it contains non-empty processor options.");
        }
    }
      </script>

      <script>
  function createGraphicsDiv(containerId) {
      const mainContainer = document.getElementById(containerId);
      const newIndex = mainContainer.children.length;

      const newGroup = document.createElement('div');
      newGroup.className = 'graphic-group flex flex-col gap-4';
      newGroup.setAttribute('data-index', newIndex);
      newGroup.innerHTML = `
          <h3>Graphic Options:</h3>
          <div class="grid grid-cols-2 gap-2 mt-2">
              <div class="flex items-center gap-2">
                  <input
                      type="text"
                      name="graphic[${newIndex}][]"
                      class="graphic outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold graphic-input"
                      placeholder="Graphic Option"
                  />
                  <button
                      type="button"
                      class="remove-graphic-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                      onclick="removeGraphicOption(this)">&times;</button>
              </div>
          </div>
          <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
              <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addGraphicOption(this)">
                  Add Graphic Option
              </div>
              <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeGraphicContainer(this)">
                  Remove Graphic Container
              </div>
          </div>
      `;

      mainContainer.appendChild(newGroup);
  }

  function addGraphicOption(button) {
      const group = button.closest('.graphic-group');
      const newIndex = group.dataset.index;
      const newInput = document.createElement('div');
      newInput.className = 'flex items-center gap-2 mt-2';
      newInput.innerHTML = `
      <div class="flex gap-1 items-center justify-center w-full mb-2">
          <input
              type="text"
              name="graphic[${newIndex}][]"
              class="graphic outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold graphic-input"
              placeholder="Graphic Option"
          />
          <button
              type="button"
              class="remove-graphic-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
              onclick="removeGraphicOption(this)">&times;</button>
      </div>`;

      const buttonContainer = group.querySelector('.mt-4.flex');
      buttonContainer.insertBefore(newInput, buttonContainer.firstChild);
  }

  function removeGraphicOption(button) {
      const graphicInputContainer = button.parentElement; 
      if (graphicInputContainer.querySelector('input').value === "") {
          graphicInputContainer.remove();
      }
  }

  function removeGraphicContainer(button) {
      const group = button.closest('.graphic-group');
      const graphicInputs = group.querySelectorAll('input[type="text"]');

      const allEmpty = Array.from(graphicInputs).every(input => input.value.trim() === "");

      if (allEmpty) {
          group.remove();
      } else {
          alert("Cannot remove this graphic group because it contains non-empty graphic options.");
      }
  }
      </script>

      <script>
          function createPriceDiv(containerId) {
              const mainContainer = document.getElementById(containerId);
              const newIndex = mainContainer.children.length;
      
              const newGroup = document.createElement('div');
              newGroup.className = 'price-group flex flex-col gap-4';
              newGroup.setAttribute('data-index', newIndex);
              newGroup.innerHTML = `
                  <h3>Price Options:</h3>
                  <div class="grid grid-cols-2 gap-2 mt-2">
                      <div class="flex items-center gap-2">
                          <input
                              type="text"
                              name="price[${newIndex}][]"
                              class="price outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold price-input"
                              placeholder="Price Option ($)"
                          />
                          <button
                              type="button"
                              class="remove-price-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                              onclick="removePriceOption(this)">&times;</button>
                      </div>
                  </div>
                  <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                      <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addPriceOption(this)">
                          Add Price Option
                      </div>
                      <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removePriceContainer(this)">
                          Remove Price Container
                      </div>
                  </div>
              `;
      
              mainContainer.appendChild(newGroup);
          }
      
          function addPriceOption(button) {
              const group = button.closest('.price-group');
              const newIndex = group.dataset.index;
              const newInput = document.createElement('div');
              newInput.className = 'flex items-center gap-2 mt-2';
              newInput.innerHTML = `
              <div class="flex gap-1 items-center justify-center w-full mb-2">
                  <input
                      type="text"
                      name="price[${newIndex}][]"
                      class="price outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold price-input"
                      placeholder="Price Option ($)"
                  />
                  <button
                      type="button"
                      class="remove-price-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                      onclick="removePriceOption(this)">&times;</button>
              </div>`;
              // Insert the new input above the "Add Price Option" button
              const buttonContainer = group.querySelector('.mt-4.flex');
              buttonContainer.insertBefore(newInput, buttonContainer.firstChild);
          }
      
          function removePriceOption(button) {
              const priceInputContainer = button.parentElement; 
              if (priceInputContainer.querySelector('input').value === "") {
                  priceInputContainer.remove();
              }
          }
      
          function removePriceContainer(button) {
              const group = button.closest('.price-group');
              const priceInputs = group.querySelectorAll('input[type="text"]');
              
              // Check if all price inputs are empty
              const allEmpty = Array.from(priceInputs).every(input => input.value.trim() === "");
      
              if (allEmpty) {
                  group.remove();
              } else {
                  alert("Cannot remove this price group because it contains non-empty price options.");
              }
          }
      </script>
      
      <script>
        function createRamDiv(containerId) {
            const mainContainer = document.getElementById(containerId);
            const newIndex = mainContainer.children.length;
    
            const newGroup = document.createElement('div');
            newGroup.className = 'ram-group flex flex-col gap-4';
            newGroup.setAttribute('data-index', newIndex);
            newGroup.innerHTML = `
                <h3>RAM Options:</h3>
                <div class="grid grid-cols-2 gap-2 mt-2">
                    <div class="flex items-center gap-2">
                        <input
                            type="text"
                            name="ram[${newIndex}][]"
                            class="ram outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold ram-input"
                            placeholder="RAM Option (GB)"
                        />
                        <button
                            type="button"
                            class="remove-ram-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                            onclick="removeRamOption(this)">&times;</button>
                    </div>
                </div>
                <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                    <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addRamOption(this)">
                        Add RAM Option
                    </div>
                    <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeRamContainer(this)">
                        Remove RAM Container
                    </div>
                </div>
            `;
    
            mainContainer.appendChild(newGroup);
        }
    
        function addRamOption(button) {
            const group = button.closest('.ram-group');
            const newIndex = group.dataset.index;
    
            const newInput = document.createElement('div');
            newInput.className = 'flex items-center gap-2 mt-2';
            newInput.innerHTML = `
                <input
                    type="text"
                    name="ram[${newIndex}][]"
                    class="ram outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold ram-input"
                    placeholder="RAM Option (GB)"
                />
                <button
                    type="button"
                    class="remove-ram-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                    onclick="removeRamOption(this)">&times;</button>
            `;
    
            const buttonContainer = group.querySelector('.mt-4.flex');
            buttonContainer.insertBefore(newInput, buttonContainer.firstChild);
        }
    
        function removeRamOption(button) {
            const ramInputContainer = button.parentElement.parentElement; 
            if (ramInputContainer.querySelector('input').value === "") {
                ramInputContainer.remove();
            }
        }
    
        function removeRamContainer(button) {
            const group = button.closest('.ram-group');
            const ramInputs = group.querySelectorAll('input[type="text"]');
    
            const allEmpty = Array.from(ramInputs).every(input => input.value.trim() === "");
    
            if (allEmpty) {
                group.remove();
            } else {
                alert("Cannot remove this RAM group because it contains non-empty RAM options.");
            }
        }
    </script>
    
    
      <script>
    function createStorageDiv(containerId) {
        const mainContainer = document.getElementById(containerId);
        const newIndex = mainContainer.children.length;

        const newGroup = document.createElement('div');
        newGroup.className = 'storage-group flex flex-col gap-4';
        newGroup.setAttribute('data-index', newIndex);
        newGroup.innerHTML = `
            <h3>Storage Options:</h3>
            <div class="grid grid-cols-2 gap-2 mt-2">
                <div class="flex items-center gap-2">
                    <input
                        type="text"
                        name="storage[${newIndex}][]"
                        class="storage outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold storage-input"
                        placeholder="Storage Option (GB)"
                    />
                    <button
                        type="button"
                        class="remove-storage-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                        onclick="removeStorageOption(this)">&times;</button>
                </div>
            </div>
            <div class="mt-4 flex flex-col bg-zinc-600 text-white px-4 py-3 rounded-lg shadow-lg">
                <div class="cursor-pointer bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center" onclick="addStorageOption(this)">
                    Add Storage Option
                </div>
                <div class="cursor-pointer bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition duration-200 ease-in-out transform hover:scale-105 text-center mt-2" onclick="removeStorageContainer(this)">
                    Remove Storage Container
                </div>
            </div>
        `;

        mainContainer.appendChild(newGroup);
    }

    function addStorageOption(button) {
        const group = button.closest('.storage-group');
        const newIndex = group.dataset.index;
        const newInput = document.createElement('div');
        newInput.className = 'flex items-center gap-2 mt-2';
        newInput.innerHTML = `
        <div class="flex gap-1 items-center justify-center w-full mb-2">
            <input
                type="text"
                name="storage[${newIndex}][]"
                class="storage outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold storage-input"
                placeholder="Storage Option (GB)"
            />
            <button
                type="button"
                class="remove-storage-option bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded-md"
                onclick="removeStorageOption(this)">&times;</button>
        </div>`;

        // Insert the new input above the "Add Storage Option" button
        const buttonContainer = group.querySelector('.mt-4.flex');
        buttonContainer.insertBefore(newInput, buttonContainer.firstChild);
    }

    function removeStorageOption(button) {
        const storageInputContainer = button.parentElement; 
        if (storageInputContainer.querySelector('input').value === "") {
            storageInputContainer.remove();
        }
    }

    function removeStorageContainer(button) {
        const group = button.closest('.storage-group');
        const storageInputs = group.querySelectorAll('input[type="text"]');

        const allEmpty = Array.from(storageInputs).every(input => input.value.trim() === "");

        if (allEmpty) {
            group.remove();
        } else {
            alert("Cannot remove this storage group because it contains non-empty storage options.");
        }
    }
      </script>

      
            <input
              type="text"
              name="capacity"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Battery Capacity"
              value="<%= find.capacity %>"
            />
            <input
              type="text"
              name="charging"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Battery Charging"
              value="<%= find.charging %>"
            />
            <input
              type="text"
              name="wifi"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Wi-Fi"
              value="<%= find.wifi %>"
            />
            <input
              type="text"
              name="bluetooth"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Bluetooth"
              value="<%= find.bluetooth %>"
            />
            <input
              type="text"
              name="typec"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="USB Type C"
              value="<%= find.typec %>"
            />
            <input
              type="text"
              name="usba"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="USB Type A"
              value="<%= find.usba %>"
            />
            <input
              type="text"
              name="ethernet"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Ethernet"
              value="<%= find.ethernet %>"
            />
            <input
              type="text"
              name="hdmi"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="HDMI"
              value="<%= find.hdmi %>"
            />
            <input
              type="text"
              name="audiojack"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Audio Jack"
              value="<%= find.audiojack %>"
            />
            <input
              type="text"
              name="maincamera"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Main Camera"
              value="<%= find.maincamera %>"
            />
            <input
              type="text"
              name="frontcamera"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Front Camera"
              value="<%= find.frontcamera %>"
            />
            <input
              type="text"
              name="video"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Video"
              value="<%= find.video %>"
            />
            <input
            type="file"
            name="image"
            class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
            placeholder="Image URL"
            value="<%= find.image %>"
            />
            <input
              type="text"
              name="previousimage"
              class="outline-none rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Previous Image URL"
              value="<%= find.image %>"
            />
          </div>

          <div>
            <label class="block text-white font-semibold mb-1 text-lg">Blog:</label>
            <textarea
              name="blog"
              class="w-full outline-none resize-none rounded-lg bg-zinc-500 text-white px-3 py-2 h-40 placeholder:text-zinc-300/80 placeholder:font-semibold"
              placeholder="Blog"
            ><%= find.blog %></textarea>
          </div>

          <div class="bg-stone-700 p-4 rounded-lg w-full">
            <h1 class="text-white text-2xl mb-4 w-full">Add Product Descriptions</h1>
            <div id="descContainer" class="w-full">
              <div id="descFields" class="flex flex-col gap-8 w-full">
                  <% if (find.descriptions && find.descriptions.length > 0) { %>
                      <% find.descriptions.forEach((desc, index) => { %>
                          <div class="mt-4 descGroup flex flex-col gap-4">
                            <h1 class="bg-black font-semibold text-orange-600 px-2 py-1 rounded-lg text-lg">Description <%= index+1 %></h1>
                              <input
                                  type="text"
                                  name="heading[<%= index %>]"
                                  class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
                                  placeholder="Product Heading"
                                  value="<%= desc.heading %>"
                              />
                              <input
                                  type="text"
                                  name="detail[<%= index %>]"
                                  class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
                                  placeholder="Product Detail"
                                  value="<%= desc.detail %>"
                              />
                              <input
                                  type="text"
                                  name="descriptionimage[<%= index %>]"
                                  class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
                                  placeholder="Product Image URL"
                                  value="<%= desc.descriptionimage %>"
                              />
                          </div>
                      <% }); %>
                  <% } else { %>
                      <div class="mt-4 descGroup flex flex-col gap-4">
                          <input
                              type="text"
                              name="heading[]"
                              class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
                              placeholder="Product Heading"
                          />
                          <input
                              type="text"
                              name="detail[]"
                              class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
                              placeholder="Product Detail"
                          />
                          <input
                              type="text"
                              name="descriptionimage[]"
                              class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
                              placeholder="Product Image URL"
                          />
                      </div>
                  <% } %>
              </div>
              <div class="flex flex-col md:flex-row md:space-x-4 bg-zinc-500 text-white px-3 py-2 rounded-lg mt-4">
                  <div id="addField" class="mt-2 cursor-pointer bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-lg"
                      onclick="createDescBox('descFields')">
                      Add Field
                  </div>
                  <div id="removeProcessor" class="mt-2 cursor-pointer bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded-lg"
                      onclick="removeDescBox('descFields', 'descr')">
                      Remove Empty Fields
                  </div>
              </div>
            </div>
            
            </div>

            <div class="flex gap-4 justify-center mt-6">
              <input
                type="submit"
                value="Update"
                class="bg-orange-600 p-3 rounded-lg font-semibold text-lg cursor-pointer hover:bg-orange-700 transition"
              />
              <input
                type="reset"
                value="Reset"
                class="bg-orange-600 p-3 rounded-lg font-semibold text-lg cursor-pointer hover:bg-orange-700 transition"
              />
            </div>
          </div>
          
      </form>
    <% } else { %>
      <p class="text-center text-lg text-white">Product not found.</p>
    <% } %>

    
  </div>

  <script>
  const createInputBox = (divName, inputType, fieldClassName, name) => {
    const div = document.getElementById(divName);
    const newDiv = document.createElement('div');
    const input = document.createElement('input');
    input.type = inputType;
    input.name = name;
    input.className = `${fieldClassName} outline-none w-full rounded-lg bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold`;
    input.placeholder = `Add ${name}`;
    newDiv.appendChild(input);
    div.appendChild(newDiv);
};

const removeInputBox = (mainDivName, inputClass) => {
    const div = document.getElementById(mainDivName);
    const inputs = div.querySelectorAll(`.${inputClass}`); 

    inputs.forEach(input => {
        if (input.value === "") {
            input.parentElement.remove();
        }
    });
};
const createDescBox = (divName) => {
    const div = document.getElementById(divName);
    const newGroup = document.createElement('div');
    newGroup.className = "mt-4 descGroup";

    const index = div.querySelectorAll('.descGroup').length + 1;

    newGroup.innerHTML = `
        <div class="bg-black font-semibold text-orange-600 px-2 py-1 rounded-lg text-lg mb-4 w-full">Description ${index}</div>
        <input
            type="text"
            name="heading[]"
            class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold mb-2"
            placeholder="Product Heading"
        />
        <input
            type="text"
            name="detail[]"
            class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold mb-2"
            placeholder="Product Detail"
        />
        <input
            type="text"
            name="descriptionimage[]"
            class="descr outline-none rounded-lg w-full bg-zinc-500 text-white px-3 py-2 placeholder:text-zinc-300/80 placeholder:font-semibold"
            placeholder="Product Image URL"
        />
    `;

    div.appendChild(newGroup);
};

const removeDescBox = (mainDivName, inputClass) => {
    const div = document.getElementById(mainDivName);
    const groups = div.querySelectorAll('.descGroup');

    groups.forEach(group => {
        const inputs = group.querySelectorAll(`.${inputClass}`);
        const allEmpty = Array.from(inputs).every(input => input.value.trim() === ''); 

        if (allEmpty) {
            group.remove();
        }
    });
};
</script>
</body>
<script src="https://cdn.tailwindcss.com"></script>
</html>
